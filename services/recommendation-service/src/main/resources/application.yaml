spring:
  application:
    name: recommendation-service

server:
  port: 7002

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.data.mongodb:
  host: localhost
  port: 27017
  database: recommendation-db

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.input:
    destination: recommendations
    group: recommendationsGroup
    consumer:
      maxAttempts: 3
      backOffInitialInterval: 500
      backOffMaxInterval: 1000
      backOffMultiplier: 2.0

  rabbit.bindings.input.consumer:
    autoBindDlq: true
    republishToDlq: true

  kafka.bindings.input.consumer:
    enableDlq: true

  kafka.binder:
    brokers: 127.0.0.1
    defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

logging:
  level:
    root: INFO
    com.habeebcycle: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---
spring:
  profiles: docker

  data:
    mongodb:
      host: mongodb

  rabbitmq:
    host: rabbitmq

  cloud.stream.kafka.binder.brokers: kafka

eureka.client.serviceUrl.defaultZone: http://service-discovery-server:8761/eureka/

server:
  port: 8080