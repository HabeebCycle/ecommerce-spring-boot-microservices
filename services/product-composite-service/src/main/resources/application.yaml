api:
  common:
    version: 1.0.0
    title: Microservices API
    description: Description of the API... This is a service that talks to other microservices and aggregate them as a response to the client
    termsOfServiceUrl: MINE TERMS OF SERVICE URL
    license: License
    licenseUrl: MY LICENSE URL

    contact:
      name: HabeebCycle
      url: habeebcycle.com
      email: hcycle.dev2k20@gmail.com

  product-composite:
    get-composite-product:
      description: Returns a composite view of the specified product id
      notes: |
        # Normal response
        If the requested product id is found the method will return information regarding:
        1. Base product information
        1. Reviews
        1. Recommendations
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)
        ## Product id 113
        200 - Ok, but no recommendations will be returned
        ## Product id 213
        200 - Ok, but no reviews will be returned
        ## Non numerical product id
        400 - A <b>Bad Request</b> error will be returned
        ## Product id 13
        404 - A <b>Not Found</b> error will be returned
        ## Negative product ids
        422 - An <b>Unprocessable Entity</b> error will be returned
        ## Internal Server Error - product id 101
        500 - An <b>Internal Server Error</b> response

server:
  port: 7000

app:
  product-service:
    host: localhost
    port: 7001
  recommendation-service:
    host: localhost
    port: 7002
  review-service:
    host: localhost
    port: 7003

logging:
  level:
    root: INFO
    com.habeebcycle: DEBUG


---
spring:
  profiles: docker

server:
  port: 8080

app:
  product-service:
    host: product-service
    port: 8080
  recommendation-service:
    host: recommendation-service
    port: 8080
  review-service:
    host: review-service
    port: 8080