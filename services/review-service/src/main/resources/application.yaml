spring:
  application:
    name: review-service

  datasource:
    url: jdbc:mysql://localhost/review-db
    username: user
    password: pwd
    hikari.initializationFailTimeout: 60000
    maximum-pool-size: 10

  # Strongly recommend to set this property to "none" in a production environment!
  jpa:
    hibernate:
      ddl-auto: update

  cloud.stream:
    defaultBinder: rabbit
    default.contentType: application/json
    bindings.input:
      destination: reviews
      group: reviewsGroup
      consumer:
        maxAttempts: 3
        backOffInitialInterval: 500
        backOffMaxInterval: 1000
        backOffMultiplier: 2.0

    rabbit.bindings.input.consumer:
      autoBindDlq: true
      republishToDlq: true

    kafka.bindings.input.consumer:
      enableDlq: true

    kafka.binder:
      brokers: 127.0.0.1
      defaultBrokerPort: 9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest


server:
  port: 7003

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

logging:
  level:
    root: INFO
    com.habeebcycle: DEBUG
    org.hibernate:
      SQL: DEBUG
      type.descriptor.sql.BasicBinder: TRACE

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---
spring:
  profiles: docker

  datasource:
    url: jdbc:mysql://mysql/review-db

  rabbitmq:
    host: rabbitmq

  cloud.stream.kafka.binder.brokers: kafka

eureka.client.serviceUrl.defaultZone: http://service-discovery-server:8761/eureka/

server:
  port: 8080